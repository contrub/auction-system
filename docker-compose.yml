services:
  frontend-react:
    container_name: frontend-react
    image: react:1.0.0
    build: "./frontend"
    env_file:
      - ./.env
    ports:
      - 3000:3000
    depends_on:
      - backend-springboot
  backend-springboot:
    container_name: backend-springboot
    image: springboot:1.0.0
    build: "./backend"
    env_file:
      - ./.env
    ports:
      - 8080:8080
    environment:
      - DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOSTNAME}:${POSTGRES_PORT}/${POSTGRES_DBNAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME}
      - DB_DRIVER=${DB_DRIVER}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
    depends_on:
      - database-postgres
  database-postgres:
    container_name: database-postgres
    image: postgres:17
    env_file:
      - ./.env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DBNAME}
    volumes:
      - ./init-scripts/:/docker-entrypoint-initdb.d/:ro
